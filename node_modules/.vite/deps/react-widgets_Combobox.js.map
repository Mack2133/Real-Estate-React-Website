{
  "version": 3,
  "sources": ["../../react-widgets/esm/Combobox.js"],
  "sourcesContent": ["const _excluded = [\"id\", \"className\", \"containerClassName\", \"placeholder\", \"autoFocus\", \"textField\", \"dataKey\", \"autoSelectMatches\", \"focusFirstItem\", \"value\", \"defaultValue\", \"onChange\", \"open\", \"defaultOpen\", \"onToggle\", \"filter\", \"busy\", \"disabled\", \"readOnly\", \"selectIcon\", \"hideCaret\", \"hideEmptyPopup\", \"busySpinner\", \"dropUp\", \"tabIndex\", \"popupTransition\", \"name\", \"onSelect\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"inputProps\", \"listProps\", \"popupProps\", \"groupBy\", \"renderListItem\", \"renderListGroup\", \"optionComponent\", \"listComponent\", \"popupComponent\", \"data\", \"messages\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport cn from 'classnames';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport { caretDown } from './Icon';\nimport Input from './Input';\nimport List from './List';\nimport { FocusListContext, useFocusList } from './FocusListContext';\nimport BasePopup from './Popup';\nimport InputAddon from './InputAddon';\nimport Widget from './Widget';\nimport WidgetPicker from './WidgetPicker';\nimport { useMessagesWithDefaults } from './messages';\nimport { useActiveDescendant } from './A11y';\nimport * as CustomPropTypes from './PropTypes';\nimport { useAccessors } from './Accessors';\nimport { useFilteredData } from './Filter';\nimport useDropdownToggle from './useDropdownToggle';\nimport useFocusManager from './useFocusManager';\nimport { notify, useFirstFocusedRender, useInstanceId } from './WidgetHelpers';\nimport { Spinner } from './Icon';\n\nfunction indexOf(data, searchTerm, text) {\n  if (!searchTerm.trim()) return -1;\n\n  for (let idx = 0; idx < data.length; idx++) if (text(data[idx]).toLowerCase() === searchTerm) return idx;\n\n  return -1;\n}\n\nlet propTypes = {\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  open: PropTypes.bool,\n  onToggle: PropTypes.func,\n  renderListItem: PropTypes.func,\n  listComponent: PropTypes.elementType,\n  renderListGroup: PropTypes.func,\n  groupBy: CustomPropTypes.accessor,\n  data: PropTypes.array,\n  dataKey: CustomPropTypes.accessor,\n  textField: CustomPropTypes.accessor,\n  name: PropTypes.string,\n\n  /** Do not show the auto complete list when it returns no results. */\n  hideEmptyPopup: PropTypes.bool,\n\n  /** Hide the combobox dropdown indicator. */\n  hideCaret: PropTypes.bool,\n\n  /**\n   *\n   * @type {(dataItem: ?any, metadata: { originalEvent: SyntheticEvent }) => void}\n   */\n  onSelect: PropTypes.func,\n  autoFocus: PropTypes.bool,\n  disabled: CustomPropTypes.disabled.acceptsArray,\n  readOnly: CustomPropTypes.disabled,\n  busy: PropTypes.bool,\n\n  /** Specify the element used to render the select (down arrow) icon. */\n  selectIcon: PropTypes.node,\n\n  /** Specify the element used to render the busy indicator */\n  busySpinner: PropTypes.node,\n  dropUp: PropTypes.bool,\n  popupTransition: PropTypes.elementType,\n  placeholder: PropTypes.string,\n\n  /** Adds a css class to the input container element. */\n  containerClassName: PropTypes.string,\n  inputProps: PropTypes.object,\n  listProps: PropTypes.object,\n  messages: PropTypes.shape({\n    openCombobox: CustomPropTypes.message,\n    emptyList: CustomPropTypes.message,\n    emptyFilter: CustomPropTypes.message\n  })\n};\n\n/**\n * ---\n * shortcuts:\n *   - { key: alt + down arrow, label: open combobox }\n *   - { key: alt + up arrow, label: close combobox }\n *   - { key: down arrow, label: move focus to next item }\n *   - { key: up arrow, label: move focus to previous item }\n *   - { key: home, label: move focus to first item }\n *   - { key: end, label: move focus to last item }\n *   - { key: enter, label: select focused item }\n *   - { key: any key, label: search list for item starting with key }\n * ---\n *\n * Select an item from the list, or input a custom value. The Combobox can also make suggestions as you type.\n\n * @public\n */\nconst ComboboxImpl = /*#__PURE__*/React.forwardRef(function Combobox(_ref, outerRef) {\n  let {\n    id,\n    className,\n    containerClassName,\n    placeholder,\n    autoFocus,\n    textField,\n    dataKey,\n    autoSelectMatches,\n    focusFirstItem = false,\n    value,\n    defaultValue = '',\n    onChange,\n    open,\n    defaultOpen = false,\n    onToggle,\n    filter = true,\n    busy,\n    disabled,\n    readOnly,\n    selectIcon = caretDown,\n    hideCaret,\n    hideEmptyPopup,\n    busySpinner,\n    dropUp,\n    tabIndex,\n    popupTransition,\n    name,\n    onSelect,\n    onKeyDown,\n    onBlur,\n    onFocus,\n    inputProps,\n    listProps,\n    popupProps,\n    groupBy,\n    renderListItem,\n    renderListGroup,\n    optionComponent,\n    listComponent: ListComponent = List,\n    popupComponent: Popup = BasePopup,\n    data: rawData = [],\n    messages: userMessages\n  } = _ref,\n      elementProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  let [currentValue, handleChange] = useUncontrolledProp(value, defaultValue, onChange);\n  const [currentOpen, handleOpen] = useUncontrolledProp(open, defaultOpen, onToggle);\n  const ref = useRef(null);\n  const inputRef = useRef(null);\n  const listRef = useRef(null);\n  const [suggestion, setSuggestion] = useState(null);\n  const shouldFilter = useRef(false);\n  const inputId = useInstanceId(id, '_input');\n  const listId = useInstanceId(id, '_listbox');\n  const activeId = useInstanceId(id, '_listbox_active_option');\n  const accessors = useAccessors(textField, dataKey);\n  const messages = useMessagesWithDefaults(userMessages);\n  const toggle = useDropdownToggle(currentOpen, handleOpen);\n  const isDisabled = disabled === true;\n  const isReadOnly = !!readOnly;\n  const data = useFilteredData(rawData, filter, shouldFilter.current ? accessors.text(currentValue) : void 0, accessors.text);\n  const selectedItem = useMemo(() => data[accessors.indexOf(data, currentValue)], [data, currentValue, accessors]);\n  const list = useFocusList({\n    activeId,\n    scope: ref,\n    focusFirstItem,\n    anchorItem: currentOpen ? selectedItem : undefined\n  });\n  const [focusEvents, focused] = useFocusManager(ref, {\n    disabled: isDisabled,\n    onBlur,\n    onFocus\n  }, {\n    didHandle(focused) {\n      if (!focused) {\n        shouldFilter.current = false;\n        toggle.close();\n        setSuggestion(null);\n        list.focus(undefined);\n      } else {\n        focus({\n          preventScroll: true\n        });\n      }\n    }\n\n  });\n  useActiveDescendant(ref, activeId, currentOpen, [list.getFocused()]);\n  /**\n   * Handlers\n   */\n\n  const handleClick = e => {\n    if (readOnly || isDisabled) return; // prevents double clicks when in a <label>\n\n    e.preventDefault();\n    focus();\n    toggle();\n  };\n\n  const handleSelect = (data, originalEvent) => {\n    toggle.close();\n    shouldFilter.current = false;\n    setSuggestion(null);\n    notify(onSelect, [data, {\n      originalEvent\n    }]);\n    change(data, originalEvent, true);\n    focus({\n      preventScroll: true\n    });\n  };\n\n  const handleInputKeyDown = ({\n    key\n  }) => {\n    if (key === 'Backspace' || key === 'Delete') {\n      list.focus(null);\n    }\n  };\n\n  const handleInputChange = event => {\n    let idx = autoSelectMatches ? indexOf(rawData, event.target.value.toLowerCase(), accessors.text) : -1;\n    shouldFilter.current = true;\n    setSuggestion(null);\n    const nextValue = idx === -1 ? event.target.value : rawData[idx];\n    change(nextValue, event);\n    if (!nextValue) toggle.close();else toggle.open();\n  };\n\n  const handleKeyDown = e => {\n    if (readOnly) return;\n    let {\n      key,\n      altKey,\n      shiftKey\n    } = e;\n    notify(onKeyDown, [e]);\n    if (e.defaultPrevented) return;\n\n    const select = item => item != null && handleSelect(item, e);\n\n    const setFocused = el => {\n      if (!el) return;\n      setSuggestion(list.toDataItem(el));\n      list.focus(el);\n    };\n\n    if (key === 'End' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      setFocused(list.last());\n    } else if (key === 'Home' && currentOpen && !shiftKey) {\n      e.preventDefault();\n      setFocused(list.first());\n    } else if (key === 'Escape' && currentOpen) {\n      e.preventDefault();\n      setSuggestion(null);\n      toggle.close();\n    } else if (key === 'Enter' && currentOpen) {\n      e.preventDefault();\n      select(list.getFocused());\n    } else if (key === 'ArrowDown') {\n      e.preventDefault();\n\n      if (currentOpen) {\n        setFocused(list.next());\n      } else {\n        return toggle.open();\n      }\n    } else if (key === 'ArrowUp') {\n      e.preventDefault();\n      if (altKey) return toggle.close();\n\n      if (currentOpen) {\n        setFocused(list.prev());\n      }\n    }\n  };\n  /**\n   * Methods\n   */\n\n\n  function focus(opts) {\n    if (inputRef.current) inputRef.current.focus(opts);\n  }\n\n  function change(nextValue, originalEvent, selected = false) {\n    handleChange(nextValue, {\n      lastValue: currentValue,\n      originalEvent,\n      source: selected ? 'listbox' : 'input'\n    });\n  }\n  /**\n   * Rendering\n   */\n\n\n  useImperativeHandle(outerRef, () => ({\n    focus\n  }));\n  let shouldRenderPopup = useFirstFocusedRender(focused, currentOpen);\n  let valueItem = accessors.findOrSelf(data, currentValue);\n  let inputValue = accessors.text(suggestion || valueItem);\n  let completeType = filter ? 'list' : 'none';\n  let popupOpen = currentOpen && (!hideEmptyPopup || !!data.length);\n  let inputReadOnly = // @ts-ignore\n  (inputProps == null ? void 0 : inputProps.readOnly) != null ? inputProps == null ? void 0 : inputProps.readOnly : readOnly;\n  let inputAddon = false;\n\n  if (!hideCaret) {\n    inputAddon = /*#__PURE__*/React.createElement(InputAddon, {\n      busy: busy,\n      icon: selectIcon,\n      spinner: busySpinner,\n      onClick: handleClick,\n      disabled: !!isDisabled || isReadOnly // FIXME\n      ,\n      label: messages.openCombobox()\n    });\n  } else if (busy) {\n    inputAddon = /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      className: \"rw-btn rw-picker-caret\"\n    }, busySpinner || Spinner);\n  }\n\n  return /*#__PURE__*/React.createElement(Widget, _extends({}, elementProps, {\n    ref: ref,\n    open: currentOpen,\n    dropUp: dropUp,\n    focused: focused,\n    disabled: isDisabled,\n    readOnly: isReadOnly\n  }, focusEvents, {\n    onKeyDown: handleKeyDown,\n    className: cn(className, 'rw-combobox')\n  }), /*#__PURE__*/React.createElement(WidgetPicker, {\n    className: cn(containerClassName, hideCaret && 'rw-widget-input', hideCaret && !busy && 'rw-hide-caret')\n  }, /*#__PURE__*/React.createElement(Input, _extends({}, inputProps, {\n    role: \"combobox\",\n    name: name,\n    id: inputId,\n    className: cn( // @ts-ignore\n    inputProps && inputProps.className, 'rw-combobox-input', !hideCaret && 'rw-widget-input'),\n    autoFocus: autoFocus,\n    tabIndex: tabIndex,\n    disabled: isDisabled,\n    readOnly: inputReadOnly,\n    \"aria-busy\": !!busy,\n    \"aria-owns\": listId,\n    \"aria-autocomplete\": completeType,\n    \"aria-expanded\": currentOpen,\n    \"aria-haspopup\": true,\n    placeholder: placeholder,\n    value: inputValue,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    ref: inputRef\n  })), inputAddon), /*#__PURE__*/React.createElement(FocusListContext.Provider, {\n    value: list.context\n  }, shouldRenderPopup && /*#__PURE__*/React.createElement(Popup, _extends({}, popupProps, {\n    dropUp: dropUp,\n    open: popupOpen,\n    transition: popupTransition,\n    onEntering: () => listRef.current.scrollIntoView()\n  }), /*#__PURE__*/React.createElement(ListComponent, _extends({}, listProps, {\n    id: listId,\n    tabIndex: -1,\n    data: data,\n    groupBy: groupBy,\n    disabled: disabled,\n    accessors: accessors,\n    renderItem: renderListItem,\n    renderGroup: renderListGroup,\n    optionComponent: optionComponent,\n    value: selectedItem,\n    searchTerm: valueItem && accessors.text(valueItem) || '',\n    \"aria-hidden\": !popupOpen,\n    \"aria-labelledby\": inputId,\n    \"aria-live\": popupOpen ? 'polite' : void 0,\n    onChange: (d, meta) => handleSelect(d, meta.originalEvent),\n    ref: listRef,\n    messages: {\n      emptyList: rawData.length ? messages.emptyFilter : messages.emptyList\n    }\n  })))));\n});\nComboboxImpl.displayName = 'Combobox';\nComboboxImpl.propTypes = propTypes;\nexport default ComboboxImpl;"],
  "mappings": "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",
  "names": ["disabled", "focused", "data", "cn"]
}
