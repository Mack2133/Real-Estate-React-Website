import {
  Spinner,
  require_classnames
} from "./chunk-JMLJIJD3.js";
import {
  require_prop_types
} from "./chunk-4LVSZ64H.js";
import {
  require_react
} from "./chunk-YSDLPTTY.js";
import {
  __toESM
} from "./chunk-ZS7NZCD4.js";

// node_modules/react-widgets/esm/Input.js
var import_classnames = __toESM(require_classnames());
var import_prop_types = __toESM(require_prop_types());
var import_react = __toESM(require_react());
var _excluded = ["className", "disabled", "readOnly", "value", "tabIndex", "type", "component"];
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Input = import_react.default.forwardRef((_ref, ref) => {
  let {
    className,
    disabled,
    readOnly,
    value,
    tabIndex,
    type = "text",
    component: Component = "input"
  } = _ref, props = _objectWithoutPropertiesLoose(_ref, _excluded);
  return import_react.default.createElement(Component, _extends({}, props, {
    ref,
    type,
    tabIndex: tabIndex || 0,
    autoComplete: "off",
    disabled,
    readOnly,
    "aria-disabled": disabled,
    "aria-readonly": readOnly,
    value: value == null ? "" : value,
    className: (0, import_classnames.default)(className, "rw-input")
  }));
});
Input.displayName = "Input";
Input.propTypes = {
  disabled: import_prop_types.default.bool,
  readOnly: import_prop_types.default.bool,
  value: import_prop_types.default.string,
  type: import_prop_types.default.string,
  tabIndex: import_prop_types.default.number,
  component: import_prop_types.default.any
};
var Input_default = Input;

// node_modules/react-widgets/esm/Button.js
var import_classnames2 = __toESM(require_classnames());
var React2 = __toESM(require_react());
var _excluded2 = ["className", "disabled", "label", "icon", "busy", "children", "spinner"];
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function Button(_ref) {
  let {
    className,
    disabled,
    label,
    icon,
    busy,
    children,
    spinner = Spinner
  } = _ref, props = _objectWithoutPropertiesLoose2(_ref, _excluded2);
  return React2.createElement("button", _extends2({
    tabIndex: -1
  }, props, {
    title: label,
    type: "button",
    disabled,
    "aria-label": label,
    "aria-disabled": disabled,
    className: (0, import_classnames2.default)(className, "rw-btn")
  }), busy ? spinner : icon, children);
}
var Button_default = Button;

export {
  Input_default,
  Button_default
};
//# sourceMappingURL=chunk-FXI54CGI.js.map
