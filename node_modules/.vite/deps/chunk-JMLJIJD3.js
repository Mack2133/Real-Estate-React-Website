import {
  require_react
} from "./chunk-YSDLPTTY.js";
import {
  __commonJS,
  __toESM
} from "./chunk-ZS7NZCD4.js";

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty;
      function classNames() {
        var classes = "";
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (arg) {
            classes = appendClass(classes, parseValue(arg));
          }
        }
        return classes;
      }
      function parseValue(arg) {
        if (typeof arg === "string" || typeof arg === "number") {
          return arg;
        }
        if (typeof arg !== "object") {
          return "";
        }
        if (Array.isArray(arg)) {
          return classNames.apply(null, arg);
        }
        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
          return arg.toString();
        }
        var classes = "";
        for (var key in arg) {
          if (hasOwn.call(arg, key) && arg[key]) {
            classes = appendClass(classes, key);
          }
        }
        return classes;
      }
      function appendClass(value, newClass) {
        if (!newClass) {
          return value;
        }
        if (value) {
          return value + " " + newClass;
        }
        return value + newClass;
      }
      if (typeof module !== "undefined" && module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
      } else if (typeof define === "function" && typeof define.amd === "object" && define.amd) {
        define("classnames", [], function() {
          return classNames;
        });
      } else {
        window.classNames = classNames;
      }
    })();
  }
});

// node_modules/invariant/browser.js
var require_browser = __commonJS({
  "node_modules/invariant/browser.js"(exports, module) {
    "use strict";
    var invariant3 = function(condition, format, a, b, c, d, e, f) {
      if (true) {
        if (format === void 0) {
          throw new Error("invariant requires an error message argument");
        }
      }
      if (!condition) {
        var error;
        if (format === void 0) {
          error = new Error(
            "Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings."
          );
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(
            format.replace(/%s/g, function() {
              return args[argIndex++];
            })
          );
          error.name = "Invariant Violation";
        }
        error.framesToPop = 1;
        throw error;
      }
    };
    module.exports = invariant3;
  }
});

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/uncontrollable/lib/esm/hook.js
var import_react = __toESM(require_react());

// node_modules/uncontrollable/lib/esm/utils.js
var import_invariant = __toESM(require_browser());
function defaultKey(key) {
  return "default" + key.charAt(0).toUpperCase() + key.substr(1);
}

// node_modules/uncontrollable/lib/esm/hook.js
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key === "symbol" ? key : String(key);
}
function _toPrimitive(input, hint) {
  if (typeof input !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function useUncontrolledProp(propValue, defaultValue, handler) {
  var wasPropRef = (0, import_react.useRef)(propValue !== void 0);
  var _useState = (0, import_react.useState)(defaultValue), stateValue = _useState[0], setState = _useState[1];
  var isProp2 = propValue !== void 0;
  var wasProp = wasPropRef.current;
  wasPropRef.current = isProp2;
  if (!isProp2 && wasProp && stateValue !== defaultValue) {
    setState(defaultValue);
  }
  return [isProp2 ? propValue : stateValue, (0, import_react.useCallback)(function(value) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    if (handler)
      handler.apply(void 0, [value].concat(args));
    setState(value);
  }, [handler])];
}
function useUncontrolled(props, config) {
  return Object.keys(config).reduce(function(result, fieldName) {
    var _extends22;
    var _ref = result, defaultValue = _ref[defaultKey(fieldName)], propsValue = _ref[fieldName], rest = _objectWithoutPropertiesLoose(_ref, [defaultKey(fieldName), fieldName].map(_toPropertyKey));
    var handlerName = config[fieldName];
    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]), value = _useUncontrolledProp[0], handler = _useUncontrolledProp[1];
    return _extends({}, rest, (_extends22 = {}, _extends22[fieldName] = value, _extends22[handlerName] = handler, _extends22));
  }, props);
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

// node_modules/uncontrollable/lib/esm/uncontrollable.js
var import_react2 = __toESM(require_react());

// node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js
function componentWillMount() {
  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);
  if (state !== null && state !== void 0) {
    this.setState(state);
  }
}
function componentWillReceiveProps(nextProps) {
  function updater(prevState) {
    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
    return state !== null && state !== void 0 ? state : null;
  }
  this.setState(updater.bind(this));
}
function componentWillUpdate(nextProps, nextState) {
  try {
    var prevProps = this.props;
    var prevState = this.state;
    this.props = nextProps;
    this.state = nextState;
    this.__reactInternalSnapshotFlag = true;
    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
      prevProps,
      prevState
    );
  } finally {
    this.props = prevProps;
    this.state = prevState;
  }
}
componentWillMount.__suppressDeprecationWarning = true;
componentWillReceiveProps.__suppressDeprecationWarning = true;
componentWillUpdate.__suppressDeprecationWarning = true;

// node_modules/uncontrollable/lib/esm/uncontrollable.js
var import_invariant2 = __toESM(require_browser());

// node_modules/react-widgets/esm/Icon.js
var React2 = __toESM(require_react());
var caretUp = React2.createElement("svg", {
  height: "1em",
  fill: "currentcolor",
  viewBox: "0 0 320 512",
  xmlns: "http://www.w3.org/2000/svg"
}, React2.createElement("path", {
  d: "M288.66 352H31.34c-17.82 0-26.74-21.54-14.14-34.14L145.86 189.2a20 20 0 0 1 28.28 0L302.8 317.86c12.6 12.6 3.68 34.14-14.14 34.14z"
}));
var caretDown = React2.createElement("svg", {
  height: "1em",
  fill: "currentcolor",
  viewBox: "0 0 320 512",
  "aria-hidden": "true",
  xmlns: "http://www.w3.org/2000/svg"
}, React2.createElement("path", {
  d: "M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
}));
var chevronRight = React2.createElement("svg", {
  height: "1em",
  fill: "currentcolor",
  viewBox: "0 0 320 512",
  "aria-hidden": "true",
  xmlns: "http://www.w3.org/2000/svg"
}, React2.createElement("path", {
  d: "M285.48 272.97L91.13 467.31a24 24 0 0 1-33.94 0l-22.67-22.66a24 24 0 0 1-.04-33.9L188.5 256 34.48 101.25a24 24 0 0 1 .04-33.9L57.2 44.7a24 24 0 0 1 33.94 0l194.35 194.34a24 24 0 0 1 0 33.94z"
}));
var chevronLeft = React2.createElement("svg", {
  height: "1em",
  fill: "currentcolor",
  viewBox: "0 0 320 512",
  "aria-hidden": "true",
  xmlns: "http://www.w3.org/2000/svg"
}, React2.createElement("path", {
  d: "M34.52 239.03L228.87 44.69a24 24 0 0 1 33.94 0l22.67 22.67a24 24 0 0 1 .04 33.9L131.49 256l154.02 154.75a24 24 0 0 1-.04 33.9l-22.67 22.67a24 24 0 0 1-33.94 0L34.52 272.97a24 24 0 0 1 0-33.94z"
}));
var calendar = React2.createElement("svg", {
  "aria-hidden": true,
  height: "1em",
  fill: "currentcolor",
  viewBox: "0 0 448 512",
  className: "rw-i-calendar",
  xmlns: "http://www.w3.org/2000/svg"
}, React2.createElement("path", {
  d: "M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z"
}));
var clock = React2.createElement("svg", {
  "aria-hidden": true,
  height: "1em",
  fill: "currentcolor",
  viewBox: "0 0 512 512",
  className: "rw-i-clock",
  xmlns: "http://www.w3.org/2000/svg"
}, React2.createElement("path", {
  d: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6a12 12 0 0 1 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z"
}));
var times = React2.createElement("svg", {
  height: ".8em",
  fill: "currentcolor",
  viewBox: "0 0 352 512",
  "aria-hidden": "true",
  xmlns: "http://www.w3.org/2000/svg"
}, React2.createElement("path", {
  d: "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
}));
var clear = React2.createElement("svg", {
  "aria-hidden": true,
  height: "1em",
  fill: "currentColor",
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 512 512"
}, React2.createElement("path", {
  d: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm101.8-262.2L295.6 256l62.2 62.2c4.7 4.7 4.7 12.3 0 17l-22.6 22.6c-4.7 4.7-12.3 4.7-17 0L256 295.6l-62.2 62.2c-4.7 4.7-12.3 4.7-17 0l-22.6-22.6c-4.7-4.7-4.7-12.3 0-17l62.2-62.2-62.2-62.2c-4.7-4.7-4.7-12.3 0-17l22.6-22.6c4.7-4.7 12.3-4.7 17 0l62.2 62.2 62.2-62.2c4.7-4.7 12.3-4.7 17 0l22.6 22.6c4.7 4.7 4.7 12.3 0 17z"
}));
var Spinner = React2.createElement("svg", {
  height: "1.4em",
  viewBox: "0 0 50 50",
  xmlSpace: "preserve",
  "aria-hidden": "true",
  xmlns: "http://www.w3.org/2000/svg"
}, React2.createElement("path", {
  fill: "currentcolor",
  d: "M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z"
}, React2.createElement("animateTransform", {
  attributeType: "xml",
  attributeName: "transform",
  type: "rotate",
  from: "0 25 25",
  to: "360 25 25",
  dur: "0.6s",
  repeatCount: "indefinite"
})));

// node_modules/react-widgets/esm/messages.js
var React3 = __toESM(require_react());
var import_react3 = __toESM(require_react());
var messages = {
  moveToday: "Today",
  moveBack: "Navigate back",
  moveForward: "Navigate forward",
  dateButton: "Select date",
  openCombobox: "open combobox",
  emptyList: "There are no items in this list",
  emptyFilter: "The filter returned no results",
  createOption: (_value, searchTerm) => [" Create option", searchTerm && " ", searchTerm && React3.createElement("strong", {
    key: "_"
  }, `"${searchTerm}"`)],
  tagsLabel: "Selected items",
  removeLabel: "Remove selected item",
  noneSelected: "no selected items",
  selectedItems: (labels) => `Selected items: ${labels.join(", ")}`,
  // number
  increment: "Increment value",
  decrement: "Decrement value"
};
var DEFAULTS = {};
function getMessages(defaults = DEFAULTS) {
  let processed = {};
  Object.keys(messages).forEach((message) => {
    let value = defaults[message];
    if (value == null)
      value = messages[message];
    processed[message] = typeof value === "function" ? value : () => value;
  });
  return processed;
}
var useMessagesWithDefaults = (defaults) => (0, import_react3.useMemo)(() => getMessages(defaults), [defaults]);

// node_modules/react-widgets/esm/WidgetHelpers.js
var import_react4 = __toESM(require_react());
var idCount = 0;
function uniqueId(prefix) {
  return "" + ((prefix == null ? "" : prefix) + ++idCount);
}
function notify(handler, args) {
  if (handler)
    handler.apply(null, args);
}
var useInstanceId = (otherId, suffix = "") => {
  const id = (0, import_react4.useRef)();
  if (!id.current)
    id.current = uniqueId("rw_");
  return (otherId || id.current) + suffix;
};
function useFirstFocusedRender(focused, open) {
  const ref = (0, import_react4.useRef)(false);
  return ref.current || (focused || !!open) && (ref.current = true);
}

// node_modules/@restart/hooks/esm/useEventCallback.js
var import_react6 = __toESM(require_react());

// node_modules/@restart/hooks/esm/useCommittedRef.js
var import_react5 = __toESM(require_react());
function useCommittedRef(value) {
  const ref = (0, import_react5.useRef)(value);
  (0, import_react5.useEffect)(() => {
    ref.current = value;
  }, [value]);
  return ref;
}
var useCommittedRef_default = useCommittedRef;

// node_modules/@restart/hooks/esm/useEventCallback.js
function useEventCallback(fn) {
  const ref = useCommittedRef_default(fn);
  return (0, import_react6.useCallback)(function(...args) {
    return ref.current && ref.current(...args);
  }, [ref]);
}

// node_modules/react-widgets/esm/Widget.js
var import_classnames = __toESM(require_classnames());
var import_react9 = __toESM(require_react());

// node_modules/@restart/hooks/esm/useEventListener.js
var import_react7 = __toESM(require_react());
function useEventListener(eventTarget, event, listener, capture = false) {
  const handler = useEventCallback(listener);
  (0, import_react7.useEffect)(() => {
    const target = typeof eventTarget === "function" ? eventTarget() : eventTarget;
    target.addEventListener(event, handler, capture);
    return () => target.removeEventListener(event, handler, capture);
  }, [eventTarget]);
}

// node_modules/@restart/hooks/esm/useGlobalListener.js
var import_react8 = __toESM(require_react());
function useGlobalListener(event, handler, capture = false) {
  const documentTarget = (0, import_react8.useCallback)(() => document, []);
  return useEventListener(documentTarget, event, handler, capture);
}

// node_modules/react-widgets/esm/Widget.js
var _excluded = ["className", "tabIndex", "focused", "open", "dropUp", "disabled", "readOnly", "autofilling"];
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function useKeyboardNavigationCheck() {
  const [isNavigatingViaKeyboard, setIsNavigatingViaKeyboard] = (0, import_react9.useState)(false);
  useGlobalListener("keydown", ({
    key
  }) => {
    if (key == " " || key === "Tab" || key == "Enter" || key && key.indexOf("Arrow") !== -1) {
      setIsNavigatingViaKeyboard(true);
    }
  });
  useGlobalListener("mousedown", () => {
    setIsNavigatingViaKeyboard(false);
  });
  return isNavigatingViaKeyboard;
}
function useWidgetProps(props) {
  const tabIndex = props.tabIndex != null ? props.tabIndex : -1;
  const isKeyboardNavigating = useKeyboardNavigationCheck();
  return {
    tabIndex,
    "data-intent": isKeyboardNavigating ? "keyboard" : "mouse",
    className: (0, import_classnames.default)(props.className, "rw-widget", props.disabled && "rw-state-disabled", props.readOnly && "rw-state-readonly", props.focused && "rw-state-focus", props.autofilling && "rw-webkit-autofill", props.open && `rw-open${props.dropUp ? "-up" : ""}`)
  };
}
var Widget = import_react9.default.forwardRef((_ref, ref) => {
  let {
    className,
    tabIndex,
    focused,
    open,
    dropUp,
    disabled,
    readOnly,
    autofilling
  } = _ref, props = _objectWithoutPropertiesLoose2(_ref, _excluded);
  const widgetProps = useWidgetProps({
    className,
    tabIndex,
    focused,
    open,
    dropUp,
    disabled,
    readOnly,
    autofilling
  });
  return import_react9.default.createElement("div", _extends2({
    ref
  }, props, widgetProps));
});
Widget.displayName = "Widget";
var Widget_default = Widget;

// node_modules/react-widgets/esm/WidgetPicker.js
var import_classnames2 = __toESM(require_classnames());
var import_react10 = __toESM(require_react());
var _excluded2 = ["className"];
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function WidgetPicker(_ref) {
  let {
    className
  } = _ref, props = _objectWithoutPropertiesLoose3(_ref, _excluded2);
  return import_react10.default.createElement("div", _extends3({}, props, {
    className: (0, import_classnames2.default)(className, "rw-widget-picker", "rw-widget-container")
  }));
}
var WidgetPicker_default = WidgetPicker;

// node_modules/react-widgets/esm/useFocusManager.js
var import_react13 = __toESM(require_react());

// node_modules/@restart/hooks/esm/useFocusManager.js
var import_react12 = __toESM(require_react());

// node_modules/@restart/hooks/esm/useMounted.js
var import_react11 = __toESM(require_react());
function useMounted() {
  const mounted = (0, import_react11.useRef)(true);
  const isMounted = (0, import_react11.useRef)(() => mounted.current);
  (0, import_react11.useEffect)(() => {
    mounted.current = true;
    return () => {
      mounted.current = false;
    };
  }, []);
  return isMounted.current;
}

// node_modules/@restart/hooks/esm/useFocusManager.js
function useFocusManager(opts) {
  const isMounted = useMounted();
  const lastFocused = (0, import_react12.useRef)();
  const handle = (0, import_react12.useRef)();
  const willHandle = useEventCallback(opts.willHandle);
  const didHandle = useEventCallback(opts.didHandle);
  const onChange = useEventCallback(opts.onChange);
  const isDisabled = useEventCallback(opts.isDisabled);
  const handleChange = (0, import_react12.useCallback)((focused, event) => {
    if (focused !== lastFocused.current) {
      didHandle == null ? void 0 : didHandle(focused, event);
      if (isMounted() || !focused) {
        lastFocused.current = focused;
        onChange == null ? void 0 : onChange(focused, event);
      }
    }
  }, [isMounted, didHandle, onChange, lastFocused]);
  const handleFocusChange = (0, import_react12.useCallback)((focused, event) => {
    if (isDisabled())
      return;
    if (event && event.persist)
      event.persist();
    if ((willHandle == null ? void 0 : willHandle(focused, event)) === false) {
      return;
    }
    clearTimeout(handle.current);
    if (focused) {
      handleChange(focused, event);
    } else {
      handle.current = window.setTimeout(() => handleChange(focused, event));
    }
  }, [willHandle, handleChange]);
  return (0, import_react12.useMemo)(() => ({
    onBlur: (event) => {
      handleFocusChange(false, event);
    },
    onFocus: (event) => {
      handleFocusChange(true, event);
    }
  }), [handleFocusChange]);
}

// node_modules/dom-helpers/esm/matches.js
var matchesImpl;
function matches(node, selector) {
  if (!matchesImpl) {
    var body = document.body;
    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;
    matchesImpl = function matchesImpl2(n, s) {
      return nativeMatch.call(n, s);
    };
  }
  return matchesImpl(node, selector);
}

// node_modules/react-widgets/esm/useFocusManager.js
var isInDisabledFieldset = (node) => {
  return !!node && matches(node, "fieldset[disabled] *");
};
function useFocusManager2(ref, props = {}, opts = {}) {
  const isMounted = useMounted();
  const [focused, setFocus] = (0, import_react13.useState)(false);
  const isDisabled = useEventCallback(() => props.disabled === true || isInDisabledFieldset(ref.current));
  const events = useFocusManager(Object.assign({}, opts, {
    isDisabled,
    onChange: (focused2) => {
      if (isMounted())
        setFocus(focused2);
    },
    didHandle(focused2, event) {
      let handler = props[focused2 ? "onFocus" : "onBlur"];
      if (handler)
        handler(event);
      if (opts.didHandle && !event.isWidgetDefaultPrevented)
        opts.didHandle(focused2, event);
    }
  }));
  return [events, focused, setFocus];
}

// node_modules/dom-helpers/esm/canUseDOM.js
var canUseDOM_default = !!(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/dom-helpers/esm/ownerDocument.js
function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

export {
  require_classnames,
  _objectWithoutPropertiesLoose,
  useUncontrolledProp,
  useUncontrolled,
  _inheritsLoose,
  caretUp,
  caretDown,
  chevronRight,
  chevronLeft,
  calendar,
  times,
  Spinner,
  getMessages,
  useMessagesWithDefaults,
  notify,
  useInstanceId,
  useFirstFocusedRender,
  useMounted,
  useEventCallback,
  ownerDocument,
  canUseDOM_default,
  useEventListener,
  Widget_default,
  WidgetPicker_default,
  useFocusManager2 as useFocusManager
};
/*! Bundled license information:

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)

react-widgets/esm/Icon.js:
  (*!
  Font Awesome Free 5.2.0 by @fontawesome - https://fontawesome.com
  License - https://fontawesome.com/license (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
  *)
*/
//# sourceMappingURL=chunk-JMLJIJD3.js.map
